# workflow name
name: Build

# on events
on: [push]

# workflow tasks
jobs:
  generate:
    name: Generate cross-platform builds
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
      - name: Create build directory
        run: |
          mkdir -p build
      - name: Build for x86_64 linux
        run: |
          GOOS=linux GOARCH=amd64 go build -ldflags="-s -w -X 'main.InpostCliVersion=${{ steps.get_version.outputs.VERSION }}'" -o ./build/inpost-cli_linux_x86_64 .
      - name: Build for arm64 linux
        run: |
          GOOS=linux GOARCH=arm64 go build -ldflags="-s -w -X 'main.InpostCliVersion=${{ steps.get_version.outputs.VERSION }}'" -o ./build/inpost-cli_linux_arm64 .
      - name: Build for armv7 linux
        run: |
          GOOS=linux GOARCH=arm go build -ldflags="-s -w -X 'main.InpostCliVersion=${{ steps.get_version.outputs.VERSION }}'" -o ./build/inpost-cli_linux_armv7 .
      - name: Build for arm64 android
        run: |
          GOOS=android GOARCH=arm64 go build -ldflags="-s -w -X 'main.InpostCliVersion=${{ steps.get_version.outputs.VERSION }}'" -o ./build/inpost-cli_android_arm64 .
      - name: Build for armv7 linux
        run: |
          GOOS=linux GOARCH=arm go build -ldflags="-s -w -X 'main.InpostCliVersion=${{ steps.get_version.outputs.VERSION }}'" -o ./build/inpost-cli_linux_armv7 .
      - name: Build for macOS
        run: |
          GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w -X 'main.InpostCliVersion=${{ steps.get_version.outputs.VERSION }}'" -o ./build/inpost-cli_macos .
      - name: Build for x86_64 windows
        run: |
          GOOS=windows GOARCH=amd64 go build -ldflags="-s -w -X 'main.InpostCliVersion=${{ steps.get_version.outputs.VERSION }}'" -o ./build/inpost-cli_windows_x86_64.exe .
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: build/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
